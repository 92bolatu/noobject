/**
 * This class is generated by jOOQ
 */
package cn.generated.tables;


import cn.generated.Keys;
import cn.generated.Lwt;
import cn.generated.tables.records.BooksRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Books extends TableImpl<BooksRecord> {

	private static final long serialVersionUID = 1191663149;

	/**
	 * The reference instance of <code>lwt.books</code>
	 */
	public static final Books BOOKS = new Books();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BooksRecord> getRecordType() {
		return BooksRecord.class;
	}

	/**
	 * The column <code>lwt.books.id</code>.
	 */
	public final TableField<BooksRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>lwt.books.name</code>.
	 */
	public final TableField<BooksRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>lwt.books.author</code>.
	 */
	public final TableField<BooksRecord, String> AUTHOR = createField("author", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>lwt.books</code> table reference
	 */
	public Books() {
		this("books", null);
	}

	/**
	 * Create an aliased <code>lwt.books</code> table reference
	 */
	public Books(String alias) {
		this(alias, BOOKS);
	}

	private Books(String alias, Table<BooksRecord> aliased) {
		this(alias, aliased, null);
	}

	private Books(String alias, Table<BooksRecord> aliased, Field<?>[] parameters) {
		super(alias, Lwt.LWT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BooksRecord> getPrimaryKey() {
		return Keys.KEY_BOOKS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BooksRecord>> getKeys() {
		return Arrays.<UniqueKey<BooksRecord>>asList(Keys.KEY_BOOKS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Books as(String alias) {
		return new Books(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Books rename(String name) {
		return new Books(name, null);
	}
}
